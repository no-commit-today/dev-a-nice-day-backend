plugins {
	id 'java-library'
	id 'java-test-fixtures'
	id 'org.springframework.boot' apply(false)
	id 'io.spring.dependency-management' apply(false)
	id 'org.asciidoctor.jvm.convert' apply(false)
	id 'io.spring.javaformat' apply(false)
}

allprojects {
	group = "${projectGroup}"
	version = "${applicationVersion}"
	sourceCompatibility = project.javaVersion

	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/milestone" }
	}
}


subprojects {

	apply plugin: 'java-library'
	apply plugin: 'java-test-fixtures'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.asciidoctor.jvm.convert'

	bootJar.enabled = false
	jar.enabled = true

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
		implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:${springCloudAwsVersion}")

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		implementation 'com.google.code.findbugs:jsr305:3.0.2'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	test {
		useJUnitPlatform {
			excludeTags('develop', 'restdocs')
		}
	}

	tasks.register('unitTest', Test) {
		group = 'verification'
		useJUnitPlatform {
			excludeTags('develop', 'context', 'restdocs')
		}
	}

	tasks.register('contextTest', Test) {
		group = 'verification'
		useJUnitPlatform {
			includeTags('context')
		}
	}

	tasks.register('restDocsTest', Test) {
		group = 'verification'
		useJUnitPlatform {
			includeTags('restdocs')
		}
	}

	tasks.register('developTest', Test) {
		group = 'verification'
		useJUnitPlatform {
			includeTags('develop')
		}
	}

	tasks.named('asciidoctor') {
		dependsOn restDocsTest
	}
}
