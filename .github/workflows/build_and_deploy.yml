# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: gradle build and push to AWS ECR

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    environment: prod
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    - name: Build with Gradle Wrapper
      run: ./gradlew :app:api-app:bootJar
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: api-app
        path: app/api-app/build/libs/application.jar
  deploy:
    environment: prod
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          Dockerfile
        sparse-checkout-cone-mode: false
    - uses: actions/download-artifact@v3
      with:
        name: api-app
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Login to AWS ECR
      uses: aws-actions/amazon-ecr-login@v1
    - name: Set GITHUB_SHA for image tag
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
          GITHUB_SHA=$(cat $GITHUB_EVENT_PATH | jq -r .pull_request.head.sha)
        fi
    - name: Build and push
      env:
        IMAGE_TAG: prod@$GITHUB_SHA
      run: |
        docker build -t ${{ vars.AWS_ECR_REGISTRY }}/dev-a-nice-day-backend:$IMAGE_TAG --push .
    - name: Logout docker
      run: |
        docker logout
    - name: Change Deployment spec
      env:
        IMAGE_NAME: ${{ vars.AWS_ECR_REGISTRY }}/dev-a-nice-day-backend
        IMAGE_TAG: prod@$GITHUB_SHA
      run: |
        eval `ssh-agent`
        ssh-add - <<< ${{ secrets.GITOPS_PRIVATE_KEY }}
        git clone git@github.com:no-commit-today/dev-a-nice-day-gitops.git
        cd backend
        BEFORE=$(cat dev-a-nice-day-backend.yaml | grep 'image: $IMAGE_NAME` | sed -e 's/^ *//g' -e 's/ *$//g')
        sed -i 's@$BEFORE@image: $IMAGE_NAME:$IMAGE_TAG@g' dev-a-nice-day-backend.yaml
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions Bot"
        git add .
        git commit -m "Updated by GitHub Actions Bot"
    - name: Push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git push origin main
